
camel.springboot.main-run-controller = true
camel.springboot.tracing = true

# This configures Springs default ActiveMQConnectionFactory that is 
# created by Spring Boot AutoConfiguration unless ActiveMQAutoConfiguration
# is explicitly disabled (which it is in this example).
# spring.activemq.broker-url=tcp://localhost:61616
# spring.activemq.user=admin
# spring.activemq.password=admin
# spring.activemq.pool.enabled=false
# spring.activemq.pool.max-connections=1

# what to say
mensaje = Pollo y Carnitas

input.endpoint=oracleaq:queue:TESSERACT_QUEUE
output.endpoint.prefix=activemq:queue:


# how often to trigger the timer
timer.period = 9000
server.port = 8888
route.id = dijkstra

# expose actuator endpoint via HTTP
management.endpoints.web.exposure.include=health,info,camelroutes
# turn on actuator health check
management.endpoint.health.enabled = true

# camel-activemq config
camel.component.activemq.broker-url=tcp://localhost:61616
camel.component.activemq.username=amq-admin
camel.component.activemq.password=admin
camel.component.activemq.use-pooled-connection=true
camel.component.activemq.use-single-connection=false
camel.component.activemq.cache-level-name=CACHE_CONSUMER
camel.component.activemq.transacted=true

test.file.path=${CAMEL_TEST_FILE:/default/tmp/cameltest/testfile.txt}

# Set the logging level for all Camel components to DEBUG
logging.level.org.apache.camel=DEBUG

# If you need even more detailed logs, you can set it to TRACE
# logging.level.org.apache.camel=TRACE

# Optional: Enable DEBUG logging for JMS components if you're using JMS
logging.level.org.apache.camel.component.jms=DEBUG
logging.level.org.springframework.jms.connection.JmsTransactionManager=DEBUG

